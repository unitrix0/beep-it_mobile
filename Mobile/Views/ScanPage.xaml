<?xml version="1.0" encoding="utf-8" ?>
<views:TabPageBase xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:Mobile.ViewModels;assembly=Mobile"
             xmlns:views="clr-namespace:Mobile.Views;assembly=Mobile"
             xmlns:zxing="clr-namespace:ZXing.Net.Mobile.Forms;assembly=ZXing.Net.Mobile.Forms"
             xmlns:helpers="clr-namespace:Mobile.Helpers;assembly=Mobile"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
             mc:Ignorable="d"
             x:Class="Mobile.Views.ScanPage"
             prism:ViewModelLocator.AutowireViewModel="True"
             Title="{Binding Title}">
    
    <d:ContentPage.BindingContext>
        <viewModels:ScanPageViewModel/>
    </d:ContentPage.BindingContext>

    <views:TabPageBase.GridContent>
        <Grid RowSpacing="0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--Row 0-->
            <StackLayout Grid.Row="0">
                <!-- -->
                <zxing:ZXingScannerView x:Name="Scanner" 
                                        IsScanning="{Binding IsScanning}" IsVisible="{Binding ScannerVisible}" IsAnalyzing="{Binding ScannerIsAnalyzing}"
                                        ScanResultCommand="{Binding OnBarcodeDetected}" />

                <StackLayout Orientation="Horizontal" HorizontalOptions="CenterAndExpand" VerticalOptions="Center">
                    <Label Text="{Binding Source={x:Reference Scanner}, Path=IsVisible}" Margin="0,0,10,0" />
                    <Label Text="{Binding Source={x:Reference Scanner}, Path=IsScanning}" Margin="0,0,10,0"/>
                    <Label Text="{Binding Source={x:Reference Scanner}, Path=IsAnalyzing}" Margin="0,0,10,0"/>

                    <Label Text="{Binding RunningScanMode}" Margin="0,0,10,0"/>
                    <Label Text="{Binding Barcode}"/>
                    <Button Text="Reset" Command="{Binding OnBarcodeDetected}"/>
                </StackLayout>
            </StackLayout>

            <!--Row 1-->
            <BoxView Grid.Row="1" HeightRequest="1" Color="#b2b2b2" VerticalOptions="Start"/>
            <StackLayout Grid.Row="1" Orientation="Horizontal" HorizontalOptions="CenterAndExpand" Margin="0,15,0,20">

                <Button x:Name ="BtnCheckIn" WidthRequest="90"
                        Text="{x:Static helpers:FontAwesomeIcons.AngleDoubleDown}" TextColor="Black"
                        FontFamily="{StaticResource FontAwesomeSolid}" 
                        FontSize="Large" Command="{Binding OnStartScan}" 
                        CommandParameter="{x:Static helpers:ScanModeEnum.CheckIn}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="BackgroundColor" Value="DodgerBlue"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Reference BtnCheckIn}, Path=IsEnabled}" Value="False" TargetType="Button">
                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                    <Setter Property="BorderColor" Value="DodgerBlue"/>
                                    <Setter Property="BorderWidth" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="BtnCheckOut" WidthRequest="90"
                        Text="{x:Static helpers:FontAwesomeIcons.AngleDoubleUp}" TextColor="Black"
                        FontFamily="{StaticResource FontAwesomeSolid}" 
                        FontSize="Large" Margin="25,0,25,0"
                        Command="{Binding OnStartScan}" CommandParameter="{x:Static helpers:ScanModeEnum.CheckOut}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="BackgroundColor" Value="DodgerBlue"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Reference BtnCheckOut}, Path=IsEnabled}" Value="False" TargetType="Button">
                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                    <Setter Property="BorderColor" Value="DodgerBlue"/>
                                    <Setter Property="BorderWidth" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button x:Name="BtnOpen" WidthRequest="90"
                        Text="{x:Static helpers:FontAwesomeIcons.BoxOpen}" TextColor="Black"
                        FontFamily="{StaticResource FontAwesomeSolid}" 
                        FontSize="Large"
                        Command="{Binding OnStartScan}" CommandParameter="{x:Static helpers:ScanModeEnum.Open}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="BackgroundColor" Value="DodgerBlue"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Reference BtnOpen}, Path=IsEnabled}" Value="False" TargetType="Button">
                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                    <Setter Property="BorderColor" Value="DodgerBlue"/>
                                    <Setter Property="BorderWidth" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackLayout>
        </Grid>
    </views:TabPageBase.GridContent>
</views:TabPageBase>